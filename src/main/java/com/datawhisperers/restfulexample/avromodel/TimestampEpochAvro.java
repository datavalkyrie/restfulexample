/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.datawhisperers.restfulexample.avromodel;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class TimestampEpochAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6853693343950103842L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TimestampEpochAvro\",\"namespace\":\"com.datawhisperers.restfulexample.avromodel\",\"fields\":[{\"name\":\"car\",\"type\":\"long\"},{\"name\":\"gps\",\"type\":\"long\"},{\"name\":\"received\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TimestampEpochAvro> ENCODER =
      new BinaryMessageEncoder<TimestampEpochAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TimestampEpochAvro> DECODER =
      new BinaryMessageDecoder<TimestampEpochAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<TimestampEpochAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<TimestampEpochAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<TimestampEpochAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TimestampEpochAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this TimestampEpochAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a TimestampEpochAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a TimestampEpochAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static TimestampEpochAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long car;
  @Deprecated public long gps;
  @Deprecated public long received;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TimestampEpochAvro() {}

  /**
   * All-args constructor.
   * @param car The new value for car
   * @param gps The new value for gps
   * @param received The new value for received
   */
  public TimestampEpochAvro(java.lang.Long car, java.lang.Long gps, java.lang.Long received) {
    this.car = car;
    this.gps = gps;
    this.received = received;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return car;
    case 1: return gps;
    case 2: return received;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: car = (java.lang.Long)value$; break;
    case 1: gps = (java.lang.Long)value$; break;
    case 2: received = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'car' field.
   * @return The value of the 'car' field.
   */
  public long getCar() {
    return car;
  }


  /**
   * Sets the value of the 'car' field.
   * @param value the value to set.
   */
  public void setCar(long value) {
    this.car = value;
  }

  /**
   * Gets the value of the 'gps' field.
   * @return The value of the 'gps' field.
   */
  public long getGps() {
    return gps;
  }


  /**
   * Sets the value of the 'gps' field.
   * @param value the value to set.
   */
  public void setGps(long value) {
    this.gps = value;
  }

  /**
   * Gets the value of the 'received' field.
   * @return The value of the 'received' field.
   */
  public long getReceived() {
    return received;
  }


  /**
   * Sets the value of the 'received' field.
   * @param value the value to set.
   */
  public void setReceived(long value) {
    this.received = value;
  }

  /**
   * Creates a new TimestampEpochAvro RecordBuilder.
   * @return A new TimestampEpochAvro RecordBuilder
   */
  public static com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro.Builder newBuilder() {
    return new com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro.Builder();
  }

  /**
   * Creates a new TimestampEpochAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TimestampEpochAvro RecordBuilder
   */
  public static com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro.Builder newBuilder(com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro.Builder other) {
    if (other == null) {
      return new com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro.Builder();
    } else {
      return new com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro.Builder(other);
    }
  }

  /**
   * Creates a new TimestampEpochAvro RecordBuilder by copying an existing TimestampEpochAvro instance.
   * @param other The existing instance to copy.
   * @return A new TimestampEpochAvro RecordBuilder
   */
  public static com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro.Builder newBuilder(com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro other) {
    if (other == null) {
      return new com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro.Builder();
    } else {
      return new com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for TimestampEpochAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TimestampEpochAvro>
    implements org.apache.avro.data.RecordBuilder<TimestampEpochAvro> {

    private long car;
    private long gps;
    private long received;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.car)) {
        this.car = data().deepCopy(fields()[0].schema(), other.car);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.gps)) {
        this.gps = data().deepCopy(fields()[1].schema(), other.gps);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.received)) {
        this.received = data().deepCopy(fields()[2].schema(), other.received);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing TimestampEpochAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.car)) {
        this.car = data().deepCopy(fields()[0].schema(), other.car);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.gps)) {
        this.gps = data().deepCopy(fields()[1].schema(), other.gps);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.received)) {
        this.received = data().deepCopy(fields()[2].schema(), other.received);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'car' field.
      * @return The value.
      */
    public long getCar() {
      return car;
    }


    /**
      * Sets the value of the 'car' field.
      * @param value The value of 'car'.
      * @return This builder.
      */
    public com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro.Builder setCar(long value) {
      validate(fields()[0], value);
      this.car = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'car' field has been set.
      * @return True if the 'car' field has been set, false otherwise.
      */
    public boolean hasCar() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'car' field.
      * @return This builder.
      */
    public com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro.Builder clearCar() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'gps' field.
      * @return The value.
      */
    public long getGps() {
      return gps;
    }


    /**
      * Sets the value of the 'gps' field.
      * @param value The value of 'gps'.
      * @return This builder.
      */
    public com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro.Builder setGps(long value) {
      validate(fields()[1], value);
      this.gps = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'gps' field has been set.
      * @return True if the 'gps' field has been set, false otherwise.
      */
    public boolean hasGps() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'gps' field.
      * @return This builder.
      */
    public com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro.Builder clearGps() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'received' field.
      * @return The value.
      */
    public long getReceived() {
      return received;
    }


    /**
      * Sets the value of the 'received' field.
      * @param value The value of 'received'.
      * @return This builder.
      */
    public com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro.Builder setReceived(long value) {
      validate(fields()[2], value);
      this.received = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'received' field has been set.
      * @return True if the 'received' field has been set, false otherwise.
      */
    public boolean hasReceived() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'received' field.
      * @return This builder.
      */
    public com.datawhisperers.restfulexample.avromodel.TimestampEpochAvro.Builder clearReceived() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TimestampEpochAvro build() {
      try {
        TimestampEpochAvro record = new TimestampEpochAvro();
        record.car = fieldSetFlags()[0] ? this.car : (java.lang.Long) defaultValue(fields()[0]);
        record.gps = fieldSetFlags()[1] ? this.gps : (java.lang.Long) defaultValue(fields()[1]);
        record.received = fieldSetFlags()[2] ? this.received : (java.lang.Long) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TimestampEpochAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<TimestampEpochAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TimestampEpochAvro>
    READER$ = (org.apache.avro.io.DatumReader<TimestampEpochAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.car);

    out.writeLong(this.gps);

    out.writeLong(this.received);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.car = in.readLong();

      this.gps = in.readLong();

      this.received = in.readLong();

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.car = in.readLong();
          break;

        case 1:
          this.gps = in.readLong();
          break;

        case 2:
          this.received = in.readLong();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}











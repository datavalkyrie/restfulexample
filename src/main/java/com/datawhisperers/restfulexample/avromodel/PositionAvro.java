/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.datawhisperers.restfulexample.avromodel;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PositionAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5490538529599587913L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PositionAvro\",\"namespace\":\"com.datawhisperers.restfulexample.avromodel\",\"fields\":[{\"name\":\"lat\",\"type\":{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"}},{\"name\":\"lon\",\"type\":{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"}},{\"name\":\"numberOfSatellitesAcquired\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<PositionAvro> ENCODER =
      new BinaryMessageEncoder<PositionAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PositionAvro> DECODER =
      new BinaryMessageDecoder<PositionAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PositionAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PositionAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PositionAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PositionAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PositionAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PositionAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PositionAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PositionAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.math.BigDecimal lat;
  @Deprecated public java.math.BigDecimal lon;
  @Deprecated public int numberOfSatellitesAcquired;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PositionAvro() {}

  /**
   * All-args constructor.
   * @param lat The new value for lat
   * @param lon The new value for lon
   * @param numberOfSatellitesAcquired The new value for numberOfSatellitesAcquired
   */
  public PositionAvro(java.math.BigDecimal lat, java.math.BigDecimal lon, java.lang.Integer numberOfSatellitesAcquired) {
    this.lat = lat;
    this.lon = lon;
    this.numberOfSatellitesAcquired = numberOfSatellitesAcquired;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return lat;
    case 1: return lon;
    case 2: return numberOfSatellitesAcquired;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: lat = (java.math.BigDecimal)value$; break;
    case 1: lon = (java.math.BigDecimal)value$; break;
    case 2: numberOfSatellitesAcquired = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'lat' field.
   * @return The value of the 'lat' field.
   */
  public java.math.BigDecimal getLat() {
    return lat;
  }


  /**
   * Sets the value of the 'lat' field.
   * @param value the value to set.
   */
  public void setLat(java.math.BigDecimal value) {
    this.lat = value;
  }

  /**
   * Gets the value of the 'lon' field.
   * @return The value of the 'lon' field.
   */
  public java.math.BigDecimal getLon() {
    return lon;
  }


  /**
   * Sets the value of the 'lon' field.
   * @param value the value to set.
   */
  public void setLon(java.math.BigDecimal value) {
    this.lon = value;
  }

  /**
   * Gets the value of the 'numberOfSatellitesAcquired' field.
   * @return The value of the 'numberOfSatellitesAcquired' field.
   */
  public int getNumberOfSatellitesAcquired() {
    return numberOfSatellitesAcquired;
  }


  /**
   * Sets the value of the 'numberOfSatellitesAcquired' field.
   * @param value the value to set.
   */
  public void setNumberOfSatellitesAcquired(int value) {
    this.numberOfSatellitesAcquired = value;
  }

  /**
   * Creates a new PositionAvro RecordBuilder.
   * @return A new PositionAvro RecordBuilder
   */
  public static com.datawhisperers.restfulexample.avromodel.PositionAvro.Builder newBuilder() {
    return new com.datawhisperers.restfulexample.avromodel.PositionAvro.Builder();
  }

  /**
   * Creates a new PositionAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PositionAvro RecordBuilder
   */
  public static com.datawhisperers.restfulexample.avromodel.PositionAvro.Builder newBuilder(com.datawhisperers.restfulexample.avromodel.PositionAvro.Builder other) {
    if (other == null) {
      return new com.datawhisperers.restfulexample.avromodel.PositionAvro.Builder();
    } else {
      return new com.datawhisperers.restfulexample.avromodel.PositionAvro.Builder(other);
    }
  }

  /**
   * Creates a new PositionAvro RecordBuilder by copying an existing PositionAvro instance.
   * @param other The existing instance to copy.
   * @return A new PositionAvro RecordBuilder
   */
  public static com.datawhisperers.restfulexample.avromodel.PositionAvro.Builder newBuilder(com.datawhisperers.restfulexample.avromodel.PositionAvro other) {
    if (other == null) {
      return new com.datawhisperers.restfulexample.avromodel.PositionAvro.Builder();
    } else {
      return new com.datawhisperers.restfulexample.avromodel.PositionAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for PositionAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PositionAvro>
    implements org.apache.avro.data.RecordBuilder<PositionAvro> {

    private java.math.BigDecimal lat;
    private java.math.BigDecimal lon;
    private int numberOfSatellitesAcquired;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.datawhisperers.restfulexample.avromodel.PositionAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.lat)) {
        this.lat = data().deepCopy(fields()[0].schema(), other.lat);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.lon)) {
        this.lon = data().deepCopy(fields()[1].schema(), other.lon);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.numberOfSatellitesAcquired)) {
        this.numberOfSatellitesAcquired = data().deepCopy(fields()[2].schema(), other.numberOfSatellitesAcquired);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing PositionAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.datawhisperers.restfulexample.avromodel.PositionAvro other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.lat)) {
        this.lat = data().deepCopy(fields()[0].schema(), other.lat);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lon)) {
        this.lon = data().deepCopy(fields()[1].schema(), other.lon);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.numberOfSatellitesAcquired)) {
        this.numberOfSatellitesAcquired = data().deepCopy(fields()[2].schema(), other.numberOfSatellitesAcquired);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'lat' field.
      * @return The value.
      */
    public java.math.BigDecimal getLat() {
      return lat;
    }


    /**
      * Sets the value of the 'lat' field.
      * @param value The value of 'lat'.
      * @return This builder.
      */
    public com.datawhisperers.restfulexample.avromodel.PositionAvro.Builder setLat(java.math.BigDecimal value) {
      validate(fields()[0], value);
      this.lat = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'lat' field has been set.
      * @return True if the 'lat' field has been set, false otherwise.
      */
    public boolean hasLat() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'lat' field.
      * @return This builder.
      */
    public com.datawhisperers.restfulexample.avromodel.PositionAvro.Builder clearLat() {
      lat = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'lon' field.
      * @return The value.
      */
    public java.math.BigDecimal getLon() {
      return lon;
    }


    /**
      * Sets the value of the 'lon' field.
      * @param value The value of 'lon'.
      * @return This builder.
      */
    public com.datawhisperers.restfulexample.avromodel.PositionAvro.Builder setLon(java.math.BigDecimal value) {
      validate(fields()[1], value);
      this.lon = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'lon' field has been set.
      * @return True if the 'lon' field has been set, false otherwise.
      */
    public boolean hasLon() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'lon' field.
      * @return This builder.
      */
    public com.datawhisperers.restfulexample.avromodel.PositionAvro.Builder clearLon() {
      lon = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'numberOfSatellitesAcquired' field.
      * @return The value.
      */
    public int getNumberOfSatellitesAcquired() {
      return numberOfSatellitesAcquired;
    }


    /**
      * Sets the value of the 'numberOfSatellitesAcquired' field.
      * @param value The value of 'numberOfSatellitesAcquired'.
      * @return This builder.
      */
    public com.datawhisperers.restfulexample.avromodel.PositionAvro.Builder setNumberOfSatellitesAcquired(int value) {
      validate(fields()[2], value);
      this.numberOfSatellitesAcquired = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'numberOfSatellitesAcquired' field has been set.
      * @return True if the 'numberOfSatellitesAcquired' field has been set, false otherwise.
      */
    public boolean hasNumberOfSatellitesAcquired() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'numberOfSatellitesAcquired' field.
      * @return This builder.
      */
    public com.datawhisperers.restfulexample.avromodel.PositionAvro.Builder clearNumberOfSatellitesAcquired() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PositionAvro build() {
      try {
        PositionAvro record = new PositionAvro();
        record.lat = fieldSetFlags()[0] ? this.lat : (java.math.BigDecimal) defaultValue(fields()[0]);
        record.lon = fieldSetFlags()[1] ? this.lon : (java.math.BigDecimal) defaultValue(fields()[1]);
        record.numberOfSatellitesAcquired = fieldSetFlags()[2] ? this.numberOfSatellitesAcquired : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PositionAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<PositionAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PositionAvro>
    READER$ = (org.apache.avro.io.DatumReader<PositionAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.lat.toString());

    out.writeString(this.lon.toString());

    out.writeInt(this.numberOfSatellitesAcquired);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.lat = new java.math.BigDecimal(in.readString());

      this.lon = new java.math.BigDecimal(in.readString());

      this.numberOfSatellitesAcquired = in.readInt();

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.lat = new java.math.BigDecimal(in.readString());
          break;

        case 1:
          this.lon = new java.math.BigDecimal(in.readString());
          break;

        case 2:
          this.numberOfSatellitesAcquired = in.readInt();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










